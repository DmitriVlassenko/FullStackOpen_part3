{"version":3,"sources":["services/notes.js","components/Person.js","components/Persons.js","components/Filter.js","components/PersonForm.js","App.js","index.js"],"names":["baseUrl","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","deletePerson","delete","Person","person","persons","setPersons","setMessage","name","number","type","onClick","window","confirm","filter","catch","error","Persons","map","Filter","props","placeholder","value","search","onChange","inputFilter","PersonForm","onSubmit","addName","newName","nameChange","phoneNumber","App","useState","setNewName","setNumber","setSearch","message","filteredList","toLowerCase","includes","useEffect","Notification","setTimeout","className","event","target","preventDefault","nameObject","date","Date","toISOString","length","duplicate","find","alert","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14a5ac6f.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst noteService = { getAll, create, update, deletePerson }\nexport default noteService","import noteService from \"../services/notes\";\n\nconst Person = ({ person, persons, setPersons, setMessage }) => {\n    const removeFromList = id => {\n        if (window.confirm(`Are you sure you want to delete ${person.name} ?`))\n            noteService.deletePerson(id)\n                .then(() => {\n                    setPersons(persons.filter(person => person.id !== id))\n                })\n                .catch(error => {\n                    setMessage(`${person.name} was already deleted`)\n                })\n    }\n\n    return (\n        <li>{person.name} {person.number}\n        <button type={\"button\"} onClick={() => removeFromList(person.id)}>X</button>\n        </li>\n    )\n}\n\nexport default Person","import Person from \"./Person\";\n\nconst Persons = ({persons, setPersons, setMessage}) => {\n    return (\n        <div>\n            <ul>\n                {persons.map((person) => <Person key={person.name} person={person} persons={persons} setPersons={setPersons} setMessage={setMessage}/>)}\n            </ul>\n        </div>\n    )\n}\n\nexport default Persons","const Filter = (props) => {\n    return (\n        <div>\n            <h3>filter shown with\n            <input type={\"text\"} placeholder={\"search\"} value={props.search} onChange={props.inputFilter}/>\n            </h3>\n        </div>\n)\n}\n\nexport default Filter\n\n\n// {person.filter((person) => {\n//         if (person.name.toLowerCase().includes(search.toLowerCase()) || person.number.toLowerCase().includes(search.toLowerCase()))\n","const PersonForm = (props) => {\n    return (\n        <div>\n            <form onSubmit={props.addName}>\n                <div>\n                    name: <input value={props.newName} onChange={props.nameChange}/>\n                </div>\n                <div>\n                    number: <input value={props.number} onChange={props.phoneNumber}/>\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PersonForm","import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport noteService from \"./services/notes\"\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ number, setNumber ] = useState('')\n  const [ search, setSearch ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const filteredList = search === '' ? persons : persons.filter((person) =>\n      ((person.name.toLowerCase().includes(search.toLowerCase())) || (person.number.includes(search))))\n\n    useEffect(() => {\n        noteService.getAll().then(response => setPersons(response))\n    }, [])\n\n    const addName = (event) => {\n        event.preventDefault()\n        const nameObject = {\n            name: newName,\n            number: number,\n            date: new Date().toISOString(),\n            id: persons.length + 1,\n        }\n        const duplicate = persons.find(person => person.name === nameObject.name)\n        if (duplicate) {\n            if (window.confirm(`${nameObject.name} is already added to phonebook, replace the old number with a new one ?`)) {\n                noteService.update(duplicate.id, nameObject).then(response => {\n                    setPersons(persons.map(person => person.id === duplicate.id ? response : person))\n                    setNewName('')\n                    setNumber('')\n                    setMessage(`${nameObject.name} successfully changed`)\n                })\n            }\n        }\n        else if (persons.find((person) => person.number === nameObject.number)) {\n            alert(`${nameObject.number} is already added to phonebook`)\n            setNumber('')\n        }\n        else if (!nameObject.name || !nameObject.number) {\n            alert(`Fill name and phone number please`)\n        }\n        else {\n            noteService.create(nameObject).then(() => {\n                setPersons(persons.concat(nameObject))\n                setNewName('')\n                setNumber('')\n                setMessage(`Added ${nameObject.name}`)\n            })\n        }\n    }\n\n    const Notification = ({message}) => {\n      if (message === null) {\n          return null\n      }\n        setTimeout(() => {\n            setMessage(null)\n        }, 5000)\n        if (message.includes(\"deleted\")) {\n            return (\n                <div className={\"badError\"}>{message}</div>\n            )\n        }\n          return (\n              <div className={\"success\"}>{message}</div>\n      )\n    }\n\n    const nameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const phoneNumber = (event) => {\n      setNumber(event.target.value)\n    }\n\n    const inputFilter = (event) => {\n      setSearch(event.target.value)\n    }\n\n  return (\n      <div className={\"App\"}>\n          <h2>Phonebook</h2>\n          <Notification message={message}/>\n          <Filter search={search} inputFilter={inputFilter}/>\n          <h3>add a new</h3>\n          <PersonForm addName={addName} newName={newName} number={number} nameChange={nameChange} phoneNumber={phoneNumber} />\n          <h3>Numbers</h3>\n          <Persons persons={filteredList} setPersons={setPersons} setMessage={setMessage}/>\n      </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}